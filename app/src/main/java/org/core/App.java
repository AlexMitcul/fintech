/*
 * This source file was generated by the Gradle 'init' task
 */
package org.core;

import com.fasterxml.jackson.core.JacksonException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class App {
    private static final Logger logger = LoggerFactory.getLogger(App.class);

    public static void main(String[] args) {
//        fileContentToXml();
        dabblingWithStreams();
    }

    private static void dabblingWithStreams() {
        List<Integer> intList = new ArrayList<>(List.of(1, 2, 3, 4, 5));
        CustomLinkedList<Integer> customLinkedList = intList.stream().reduce(
                new CustomLinkedList<>(),
                (list, element) -> {
                    list.add(element);
                    return list;
                },
                (list1, list2) -> list1
        );

        System.out.println("CustomLinkedList content:");
        for (int i = 0; i < customLinkedList.size(); i++) {
            System.out.println(customLinkedList.get(i));
        }
    }

    private static void fileContentToXml() {
        logger.info("App is running");

        ObjectMapper mapper = new ObjectMapper();

        List<File> files = new ArrayList<>(List.of(
                new File("app/src/main/resources/city.json"),
                new File("app/src/main/resources/city-error.json")
        ));

        for (var file : files) {
            try {
                logger.info("Trying to read file %s".formatted(file.getName()));

                City city = mapper.readValue(file, City.class);
                logger.info("Successfully read file %s".formatted(file.getName()));

                city.toXML();
            } catch (JacksonException jacksonException) {
                logger.error("File with name %s is invalid.".formatted(file.getName()));
            } catch (IOException ioException) {
                logger.error("File with name %s doesn't exist.".formatted(file.getName()));
            }

        }
    }

}
